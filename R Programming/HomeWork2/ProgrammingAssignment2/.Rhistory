package.install("swirl")
install.packages("swirl")
library("swirl")
swirl()
swirl()
swirl()
install_from_swirl("R Programming")
swirl()
5+7
x = 5+7
x <- 5+7
x
y = x-3
y
y <- x-3
y
c(1.1,9,3.14)
z = c(1.1,9,3.14)
z <- c(1.1,9,3.14)
?plot
?c
swirl()
library(swirl)
swirl()
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x = 9
x <- 9
ls()
list.files()
dir()
?list.files
args(list.files)
old.dir = getws()
old.dir = getwd()
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.r")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2")
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"), recursive=T)
file.delete(file.path("testdir2","testdir3"))
dir.delete(file.path("testdir2","testdir3"))
bye()
swirl()
dir()
dir.list("testdir2")
file.exists(file.path("testdir2","testdir3"))
dir.create(file.path('testdir2', 'testdir3'), recursive=TRUE)
unlink(file.path("testdir2"))
unlink(file.path("testdir2"),recursive=T
)
unlink(file.path("testdir2"),recursive=TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir3",recursive=T)
unlink("testdir",recursive=T)
unlink("testdir",recursive=TRUE)
mean(c(1,2,3))
play
play()
mean(c(1,2,3), rm.na())
mean(c(1,2,3), rm.na=T
)
dir()
load("~/.RData")
bye()
a
load("~/.RData")
cd ..
!cd ..
table <- read.csv("hw1_data.csv")
newtable <- table[good,]
table
table[table$Month==6]
table[table$Month==6, Temp]
table[table$Month==6, table$Temp]
table[table$Month==6, "Temp"]
mean(table[table$Month==6, "Temp"])
subset(data.df, Month == 6 , select = Temp)
subset(table, Month == 6 , select = Temp)
subset(table, Month == 6)
subset(table, Month == 6 , select = Temp)
mean(subset(table, Month == 6 , select = Temp))
subset(table, Month == 6 , select = Temp)
subset(table, Month == 6 , select = Temp, rm.na=T)
mean(subset(table, Month == 6 , select = Temp, rm.na=T))
table[table$Month==6, "Temp"]
subset(table, Month == 6 , select = Temp)
subset(rm.na(table), Month == 6 , select = Temp)
subset(table, Month == 6 , select = Temp)
subset(table, Month == 6 , select = Temp, rm.na=TRUE)
mean(subset(table, Month == 6 , select = Temp, rm.na=TRUE))
subset(table, Month == 6 , select = Temp, rm.na=TRUE)
vector(subset(table, Month == 6 , select = Temp, rm.na=TRUE))
x = subset(table, Month == 6 , select = Temp, rm.na=TRUE)
x
mean(x)
mean(x, rm.na)
mean(x, rm.na=T)
x
mean(x, rm.na=T)
mean(x, na.rm=T)
mean(x, na.rm=TRUE)
mean(na.omit(x))
na.omit(x)
x
vector(x)
?x
mean(x)
unlist(x)
mean(unlist(x))
x = subset(table, Month == 6 , select = Temp)
x = unlist(x)
mean(x)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
play()
x <- list(2, "a", "b", TRUE)
x
x[[2]]
swirl()
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
exit
bye
info()
main()
info()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
num_vect <- c(0.5,55,-10,6)
tf<-num_vect<1
tf
a <-num_vect>=6
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse = " ")
c(my_char,"Piero")
my_name<-c(my_char,"Piero")
my_name
paste(my_name,collapse = " ")
paste("Hello","world!", sep=" ")
paste(1:3,c("X","Y","Z"), sep="")
paste(LETTERS,1:4,sep="-")
q()
<<-?
?<<-
<<-
<-?
?<-
?(<<-)
?mean
?(<--)
getwd()
setwd("../Dropbox/ProgFun/R/datasciencecoursera/R Programming/HomeWork2/")
setwd("ProgrammingAssignment2")
source("cachematrix.R")
cacheSolve()
a = [1,2,3;1,2,3;1,2,3]
a = {1,2,3;1,2,3;1,2,3}
a = matrix(c(1,2,3,1,2,3,1,2,3), nrows=3,ncols=3)
a = matrix(c(1,2,3,1,2,3,1,2,3), nrow=3,ncol=3)
a
cacheSolve(a)
source("cachematrix.R")
cacheSolve(a)
b = makeCacheMatrix(a)
cacheSolve(b)
a = matrix(c(1,2,3,3,2,1,2,2,2), nrow=3,ncol=3)
b = makeCacheMatrix(a)
a = matrix(c(1,2,3,3,2,1,2,2,2), nrow=3,ncol=3)
b = makeCacheMatrix(a)
cacheSolve(b)
eye(10)
a = matrix(c(1,0,0,0,1,0,0,0,1), nrow=3,ncol=3)
b = makeCacheMatrix(a)
cacheSolve(b)
a = matrix(c(4,7,2,6), nrow=2,ncol=2)
b = makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
cacheSolve(b)
cacheSolve(b)
a = matrix(c(4,7,2,1), nrow=2,ncol=2)
b = makeCacheMatrix(a)
a = matrix(c(4,7,2,1), nrow=2,ncol=2)
cacheSolve(b)
cacheSolve(b)
cacheSolve(b)
cacheSolve(b)
b = makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
source("cachematrix.R")
a = matrix(c(4,7,2,1), nrow=2,ncol=2)
b = makeCacheMatrix(a)
cacheSolve(b)
source("cachematrix.R")
a = matrix(c(4,7,2,1), nrow=2,ncol=2)
b = makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
source('C:/Users/Piero/Dropbox/ProgFun/R/datasciencecoursera/R Programming/HomeWork2/ProgrammingAssignment2/cachematrix.R')
a = matrix(c(4,7,2,1), nrow=2,ncol=2)
b = makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
?melt
??melt
