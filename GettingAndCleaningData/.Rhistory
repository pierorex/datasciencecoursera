package.install("swirl")
install.packages("swirl")
library("swirl")
swirl()
swirl()
swirl()
install_from_swirl("R Programming")
swirl()
5+7
x = 5+7
x <- 5+7
x
y = x-3
y
y <- x-3
y
c(1.1,9,3.14)
z = c(1.1,9,3.14)
z <- c(1.1,9,3.14)
?plot
?c
swirl()
library(swirl)
swirl()
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4)
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x = 9
x <- 9
ls()
list.files()
dir()
?list.files
args(list.files)
old.dir = getws()
old.dir = getwd()
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.r")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2")
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"), recursive=T)
file.delete(file.path("testdir2","testdir3"))
dir.delete(file.path("testdir2","testdir3"))
bye()
swirl()
dir()
dir.list("testdir2")
file.exists(file.path("testdir2","testdir3"))
dir.create(file.path('testdir2', 'testdir3'), recursive=TRUE)
unlink(file.path("testdir2"))
unlink(file.path("testdir2"),recursive=T
)
unlink(file.path("testdir2"),recursive=TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir3",recursive=T)
unlink("testdir",recursive=T)
unlink("testdir",recursive=TRUE)
mean(c(1,2,3))
play
play()
mean(c(1,2,3), rm.na())
mean(c(1,2,3), rm.na=T
)
dir()
load("~/.RData")
bye()
a
load("~/.RData")
cd ..
!cd ..
table <- read.csv("hw1_data.csv")
newtable <- table[good,]
table
table[table$Month==6]
table[table$Month==6, Temp]
table[table$Month==6, table$Temp]
table[table$Month==6, "Temp"]
mean(table[table$Month==6, "Temp"])
subset(data.df, Month == 6 , select = Temp)
subset(table, Month == 6 , select = Temp)
subset(table, Month == 6)
subset(table, Month == 6 , select = Temp)
mean(subset(table, Month == 6 , select = Temp))
subset(table, Month == 6 , select = Temp)
subset(table, Month == 6 , select = Temp, rm.na=T)
mean(subset(table, Month == 6 , select = Temp, rm.na=T))
table[table$Month==6, "Temp"]
subset(table, Month == 6 , select = Temp)
subset(rm.na(table), Month == 6 , select = Temp)
subset(table, Month == 6 , select = Temp)
subset(table, Month == 6 , select = Temp, rm.na=TRUE)
mean(subset(table, Month == 6 , select = Temp, rm.na=TRUE))
subset(table, Month == 6 , select = Temp, rm.na=TRUE)
vector(subset(table, Month == 6 , select = Temp, rm.na=TRUE))
x = subset(table, Month == 6 , select = Temp, rm.na=TRUE)
x
mean(x)
mean(x, rm.na)
mean(x, rm.na=T)
x
mean(x, rm.na=T)
mean(x, na.rm=T)
mean(x, na.rm=TRUE)
mean(na.omit(x))
na.omit(x)
x
vector(x)
?x
mean(x)
unlist(x)
mean(unlist(x))
x = subset(table, Month == 6 , select = Temp)
x = unlist(x)
mean(x)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
play()
x <- list(2, "a", "b", TRUE)
x
x[[2]]
swirl()
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
exit
bye
info()
main()
info()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
num_vect <- c(0.5,55,-10,6)
tf<-num_vect<1
tf
a <-num_vect>=6
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse = " ")
c(my_char,"Piero")
my_name<-c(my_char,"Piero")
my_name
paste(my_name,collapse = " ")
paste("Hello","world!", sep=" ")
paste(1:3,c("X","Y","Z"), sep="")
paste(LETTERS,1:4,sep="-")
q()
install.packages('RMySQL',type='source')
library(RMySQL)
u = dbConnect(MySQL(), user="genome",host="genome-mysql.cse.ucsc.edu")
dbGetQuery(u,"show databases;")
dbDisconnect(u)
dbGetQuery(u,"show databases;")
u = dbConnect(MySQL(), user="genome",host="genome-mysql.cse.ucsc.edu")
dbGetQuery(u,"show databases;")
dbDisconnect(u)
u = dbConnect(MySQL(), user="genome",host="genome-mysql.cse.ucsc.edu")
dbGetQuery(u,"show databases;")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "c4d1caaa36445a85394f",
secret = "a821565a455392388175d5036280a3f397aa33c2")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
nchar("<meta name="Distribution" content="Global" />")
nchar?
asd
ยก?nchar
?nchar
nchar(c("<meta name="Distribution" content="Global" />"))
nchar(c("<meta name="Distribution" content="Global" />",))
nchar(c("<meta name="Distribution" content="Global" />","asd"))
nchar(<meta name='Distribution' content='Global' />')
nchar(c(<meta name='Distribution' content='Global' />'))
nchar("<meta name='Distribution' content='Global' />'")
nchar("<meta name='Distribution' content='Global' />")
nchar("<script type='text/javascript'>")
nchar("  })();")
nchar("				<ul class='sidemenu'>")
getwd()
setwd("../Dropbox/ProgFun/R/datasciencecoursera/GettingAndCleaningData/")
cat("getdata-wksst8110.for")
library("fwf")
library("read.fwf")
library("utils")
?read.fwf
read.fwf(file="getdata-wksst8110.for",header=TRUE,widths = c(9,5,8,5,8,5,8,5,8))
read.fwf(file="getdata-wksst8110.for",widths = c(9,5,8,5,8,5,8,5,8))
f = read.fwf(file="getdata-wksst8110.for",widths = c(9,5,8,5,8,5,8,5,8))
f[1,1]
f[1]
f[[1]]
f[1,1]
f[,1]
?f
f
f[1258]
f[125]
f[12]
f[2]
f[3]
f[4]
f = read.fwf(file="getdata-wksst8110.for",widths = c(9,-5,8,-5,8,-5,8,-5,8))
f[1]
f = read.fwf(file="getdata-wksst8110.for",widths = c(10,-6,9,-5,8,-5,8,-5,8))
f[1]
f[2]
f = read.fwf(file="getdata-wksst8110.for",widths = c(-1,9,-5,8,-5,8,-5,8,-5,8))
f[1]
f[2]
f[3]
f[4]
f[5]
f[4]
sum(f[4])
f[4,1:10]
f[1:10,4]
f[1:10]
f[1:10,1:1]
f[5:,4]
f[5:1258,4]
sum(f[5:1258,4])
unlist(f[5:1258,4])
sum(unlist(f[5:1258,4]))
as.character(f[5:1258,4])
as.numeric(as.character(f[5:1258,4]))
f = read.fwf(file="getdata-wksst8110.for",widths = c(-1,9,-5,4,4,-5,4,4,-5,4,4,-5,4,4))
as.numeric(as.character(f[5:10,4]))
as.numeric(as.character(f[5:1258,4]))
as.numeric(as.character(f[5:1259,4]))
as.numeric(as.character(f[5:1258,4]))
sum(as.numeric(as.character(f[5:1258,4])))
